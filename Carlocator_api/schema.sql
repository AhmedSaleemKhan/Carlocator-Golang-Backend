-- Generated by pgdumpschema using pg_dump -s

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE SCHEMA findr;

ALTER SCHEMA findr OWNER TO findr;

CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;

COMMENT ON EXTENSION postgis IS 'PostGIS geometry and geography spatial types and functions';

SET default_tablespace = '';

SET default_table_access_method = heap;

CREATE TABLE findr.dlr_loc (
    loc_id uuid NOT NULL,
    dlr_id uuid NOT NULL,
    map_id uuid NOT NULL,
    row_id uuid NOT NULL,
    loc_name character varying NOT NULL,
    show_loc_on_map character varying NOT NULL,
    loc_coord character varying NOT NULL,
    loc_has_spaces character varying NOT NULL,
    number_of_spaces integer NOT NULL,
    loc_checkboxes character varying NOT NULL,
    one_party_transfer character varying NOT NULL,
    max_num_veh integer NOT NULL,
    check_in_out character varying NOT NULL,
    loc_cmnt character varying NOT NULL
);

ALTER TABLE findr.dlr_loc OWNER TO findr;

CREATE TABLE findr.dlr_role (
    role_name text NOT NULL,
    dflt_max_key_cnt bigint
);

ALTER TABLE findr.dlr_role OWNER TO findr;

CREATE TABLE findr.dlr_space (
    space_id uuid NOT NULL,
    loc_id uuid NOT NULL,
    space_name character varying NOT NULL,
    space_cmnt character varying NOT NULL
);

ALTER TABLE findr.dlr_space OWNER TO findr;

CREATE TABLE findr.dlr_staff (
    staff_id uuid NOT NULL,
    dlr_id uuid NOT NULL,
    staff_role_name text NOT NULL,
    dlr_staff_no text,
    max_key_staff bigint,
    max_role_keys bigint,
    multi_login boolean,
    nam_first text,
    nam_last text,
    staff_username text,
    staff_phone_cell text,
    staff_email_work text,
    staff_email_personal text,
    staff_info text,
    created_at bigint,
    profile_image text,
    region text,
    city text,
    state text,
    postal_code text,
    street1_address text,
    street2_address text,
    currency text
);

ALTER TABLE findr.dlr_staff OWNER TO findr;

CREATE TABLE findr.gorp_migrations (
    id text NOT NULL,
    applied_at timestamp with time zone
);

ALTER TABLE findr.gorp_migrations OWNER TO findr;

CREATE TABLE findr.map (
    map_id uuid NOT NULL,
    dlr_id uuid NOT NULL,
    map_name text,
    map_polygon public.geometry
);

ALTER TABLE findr.map OWNER TO findr;

CREATE TABLE findr.map_parking_lot (
    parking_lot_id uuid NOT NULL,
    map_id uuid NOT NULL,
    parking_name text,
    parking_polygon public.geometry
);

ALTER TABLE findr.map_parking_lot OWNER TO findr;

CREATE TABLE findr.map_rows (
    row_id uuid NOT NULL,
    zone_id uuid NOT NULL,
    row_name text,
    row_polygon public.geometry
);

ALTER TABLE findr.map_rows OWNER TO findr;

CREATE TABLE findr.map_slot (
    slot_id uuid NOT NULL,
    row_id uuid NOT NULL,
    veh_id uuid,
    slot_name text,
    spacing_no integer,
    slot_available boolean DEFAULT true,
    slot_polygon public.geometry,
    car_color text
);

ALTER TABLE findr.map_slot OWNER TO findr;

CREATE TABLE findr.map_zone (
    zone_id uuid NOT NULL,
    parking_lot_id uuid NOT NULL,
    zone_name text,
    zone_polygon public.geometry
);

ALTER TABLE findr.map_zone OWNER TO findr;

CREATE TABLE findr.sys_dealer (
    dlr_id uuid NOT NULL,
    group_id uuid,
    language_id uuid,
    country_id uuid,
    parent_dlr_id uuid,
    email text,
    dlr_username text NOT NULL,
    created_at bigint,
    updated_at bigint,
    email_verified boolean DEFAULT false,
    region text,
    branch_name text,
    dlr_logo text,
    dlr_name text,
    short_name text,
    street1_address text,
    street2_address text,
    city text,
    postal_code text,
    telephone text,
    website text,
    sic_code text,
    miles_km bigint,
    dlr_tax_id text,
    currency text,
    dlr_discord text,
    billing_period text,
    invoice_method text,
    payment_method text,
    dlr_cmnt text,
    loc_note text,
    role_name text,
    state text,
    dealership_logo text,
    dealership_name text
);

ALTER TABLE findr.sys_dealer OWNER TO findr;

CREATE TABLE findr.veh_assign_key (
    key_assign_id uuid NOT NULL,
    veh_id uuid NOT NULL,
    key_id uuid NOT NULL,
    staff_id uuid NOT NULL,
    key_assign_status boolean NOT NULL,
    transfer_id uuid NOT NULL,
    transfere_id uuid NOT NULL,
    assign_cmnt text,
    date_key_assign_start bigint,
    date_key_assign_stop bigint
);

ALTER TABLE findr.veh_assign_key OWNER TO findr;

CREATE TABLE findr.veh_key (
    key_id uuid NOT NULL,
    veh_id uuid NOT NULL,
    key_name character varying NOT NULL,
    key_accessible character varying NOT NULL,
    received_from character varying NOT NULL,
    received_by character varying NOT NULL,
    key_available boolean DEFAULT true,
    loc_name text
);

ALTER TABLE findr.veh_key OWNER TO findr;

CREATE TABLE findr.veh_loc (
    veh_loc_id uuid NOT NULL,
    loc_id uuid NOT NULL,
    veh_id uuid NOT NULL,
    space_id uuid NOT NULL,
    user_in character varying NOT NULL,
    user_out character varying NOT NULL,
    date_in_loc bigint NOT NULL,
    date_out_loc bigint NOT NULL
);

ALTER TABLE findr.veh_loc OWNER TO findr;

CREATE TABLE findr.vehicle (
    veh_id uuid NOT NULL,
    dlr_id uuid NOT NULL,
    car_status_id uuid,
    veh_type_id uuid,
    attach_id uuid,
    map_color text,
    veh_name text,
    stock_no bigint,
    vin text,
    lic_plate text,
    make text,
    model text,
    year text,
    veh_color text,
    transmission_style text,
    note text,
    created_at bigint NOT NULL,
    veh_available boolean DEFAULT true
);

ALTER TABLE findr.vehicle OWNER TO findr;

CREATE TABLE public."Vehicles" (
);

ALTER TABLE public."Vehicles" OWNER TO findr;

CREATE TABLE public.gorp_migrations (
    id text NOT NULL,
    applied_at timestamp with time zone
);

ALTER TABLE public.gorp_migrations OWNER TO findr;

ALTER TABLE ONLY findr.dlr_staff
    ADD CONSTRAINT dlr_staff_pkey PRIMARY KEY (staff_id);

ALTER TABLE ONLY findr.gorp_migrations
    ADD CONSTRAINT gorp_migrations_pkey PRIMARY KEY (id);

ALTER TABLE ONLY findr.dlr_loc
    ADD CONSTRAINT loc_id_pkey PRIMARY KEY (loc_id);

ALTER TABLE ONLY findr.map
    ADD CONSTRAINT map_pkey PRIMARY KEY (map_id);

ALTER TABLE ONLY findr.map_parking_lot
    ADD CONSTRAINT parking_lot_id_pkey PRIMARY KEY (parking_lot_id);

ALTER TABLE ONLY findr.dlr_role
    ADD CONSTRAINT role_name_pkey PRIMARY KEY (role_name);

ALTER TABLE ONLY findr.map_rows
    ADD CONSTRAINT row_id_pkey PRIMARY KEY (row_id);

ALTER TABLE ONLY findr.map_slot
    ADD CONSTRAINT slot_id_pkey PRIMARY KEY (slot_id);

ALTER TABLE ONLY findr.dlr_space
    ADD CONSTRAINT space_id_pkey PRIMARY KEY (space_id);

ALTER TABLE ONLY findr.sys_dealer
    ADD CONSTRAINT sys_dealer_pkey PRIMARY KEY (dlr_id);

ALTER TABLE ONLY findr.veh_key
    ADD CONSTRAINT veh_key_pkey PRIMARY KEY (key_id);

ALTER TABLE ONLY findr.veh_loc
    ADD CONSTRAINT veh_loc_pkey PRIMARY KEY (veh_loc_id);

ALTER TABLE ONLY findr.veh_assign_key
    ADD CONSTRAINT veh_pkey PRIMARY KEY (key_assign_id);

ALTER TABLE ONLY findr.vehicle
    ADD CONSTRAINT vehicle_pkey PRIMARY KEY (veh_id);

ALTER TABLE ONLY findr.map_zone
    ADD CONSTRAINT zone_id_pkey PRIMARY KEY (zone_id);

ALTER TABLE ONLY public.gorp_migrations
    ADD CONSTRAINT gorp_migrations_pkey PRIMARY KEY (id);

CREATE INDEX "fki_V" ON findr.veh_key USING btree (veh_id);

CREATE INDEX fki_key_id ON findr.veh_key USING btree (key_id);

CREATE INDEX fki_veh_id ON findr.vehicle USING btree (veh_id);

ALTER TABLE ONLY findr.vehicle
    ADD CONSTRAINT dealer_id_fkey FOREIGN KEY (dlr_id) REFERENCES findr.sys_dealer(dlr_id);

ALTER TABLE ONLY findr.dlr_staff
    ADD CONSTRAINT dealer_id_fkey FOREIGN KEY (dlr_id) REFERENCES findr.sys_dealer(dlr_id);

ALTER TABLE ONLY findr.dlr_loc
    ADD CONSTRAINT dlr_id_fkey FOREIGN KEY (dlr_id) REFERENCES findr.sys_dealer(dlr_id);

ALTER TABLE ONLY findr.map
    ADD CONSTRAINT dlr_id_fkey FOREIGN KEY (dlr_id) REFERENCES findr.sys_dealer(dlr_id);

ALTER TABLE ONLY findr.veh_assign_key
    ADD CONSTRAINT key_id_fkey FOREIGN KEY (key_id) REFERENCES findr.veh_key(key_id);

ALTER TABLE ONLY findr.map_parking_lot
    ADD CONSTRAINT map_id_fkey FOREIGN KEY (map_id) REFERENCES findr.map(map_id);

ALTER TABLE ONLY findr.map_zone
    ADD CONSTRAINT parking_lot_id_fkey FOREIGN KEY (parking_lot_id) REFERENCES findr.map_parking_lot(parking_lot_id);

ALTER TABLE ONLY findr.map_slot
    ADD CONSTRAINT row_id_fkey FOREIGN KEY (row_id) REFERENCES findr.map_rows(row_id);

ALTER TABLE ONLY findr.dlr_staff
    ADD CONSTRAINT staff_role_name_fkey FOREIGN KEY (staff_role_name) REFERENCES findr.dlr_role(role_name);

ALTER TABLE ONLY findr.veh_assign_key
    ADD CONSTRAINT veh_id_fkey FOREIGN KEY (veh_id) REFERENCES findr.vehicle(veh_id);

ALTER TABLE ONLY findr.veh_key
    ADD CONSTRAINT veh_id_fkey FOREIGN KEY (veh_id) REFERENCES findr.vehicle(veh_id) ON DELETE CASCADE;

ALTER TABLE ONLY findr.veh_loc
    ADD CONSTRAINT veh_id_fkey FOREIGN KEY (veh_id) REFERENCES findr.vehicle(veh_id);

ALTER TABLE ONLY findr.map_slot
    ADD CONSTRAINT veh_id_fkey FOREIGN KEY (veh_id) REFERENCES findr.vehicle(veh_id);

ALTER TABLE ONLY findr.map_rows
    ADD CONSTRAINT zone_id_fkey FOREIGN KEY (zone_id) REFERENCES findr.map_zone(zone_id);

REVOKE ALL ON SCHEMA public FROM rdsadmin;
REVOKE ALL ON SCHEMA public FROM PUBLIC;
GRANT ALL ON SCHEMA public TO findr;
GRANT ALL ON SCHEMA public TO PUBLIC;

T NULL,
    key_id uuid NOT NULL,
    staff_id uuid NOT NULL,
    key_assign_status boolean NOT NULL,
    transfer_id uuid NOT NULL,
    transfere_id uuid NOT NULL,
    assign_cmnt text,
    date_key_assign_start bigint,
    date_key_assign_stop bigint
);

ALTER TABLE findr.veh_assign_key OWNER TO carlocator;

CREATE TABLE findr.veh_key (
    key_id uuid NOT NULL,
    veh_id uuid NOT NULL,
    key_name character varying NOT NULL,
    key_accessible character varying NOT NULL,
    received_from character varying NOT NULL,
    received_by character varying NOT NULL,
    key_available boolean DEFAULT true,
    loc_name text
);

ALTER TABLE findr.veh_key OWNER TO carlocator;

CREATE TABLE findr.veh_loc (
    veh_loc_id uuid NOT NULL,
    loc_id uuid NOT NULL,
    veh_id uuid NOT NULL,
    space_id uuid NOT NULL,
    user_in character varying NOT NULL,
    user_out character varying NOT NULL,
    date_in_loc bigint NOT NULL,
    date_out_loc bigint NOT NULL
);

ALTER TABLE findr.veh_loc OWNER TO carlocator;

CREATE TABLE findr.vehicle (
    veh_id uuid NOT NULL,
    dlr_id uuid NOT NULL,
    car_status_id uuid,
    veh_type_id uuid,
    attach_id uuid,
    map_color text,
    veh_name text,
    stock_no bigint,
    vin text,
    lic_plate text,
    make text,
    model text,
    year text,
    veh_color text,
    transmission_style text,
    note text,
    created_at bigint NOT NULL,
    veh_available boolean DEFAULT true
);

ALTER TABLE findr.vehicle OWNER TO carlocator;

CREATE TABLE public.gorp_migrations (
    id text NOT NULL,
    applied_at timestamp with time zone
);

ALTER TABLE public.gorp_migrations OWNER TO carlocator;

ALTER TABLE ONLY findr.dlr_staff
    ADD CONSTRAINT dlr_staff_pkey PRIMARY KEY (staff_id);

ALTER TABLE ONLY findr.dlr_loc
    ADD CONSTRAINT loc_id_pkey PRIMARY KEY (loc_id);

ALTER TABLE ONLY findr.map
    ADD CONSTRAINT map_pkey PRIMARY KEY (map_id);

ALTER TABLE ONLY findr.map_parking_lot
    ADD CONSTRAINT parking_lot_id_pkey PRIMARY KEY (parking_lot_id);

ALTER TABLE ONLY findr.dlr_role
    ADD CONSTRAINT role_name_pkey PRIMARY KEY (role_name);

ALTER TABLE ONLY findr.map_slot
    ADD CONSTRAINT slot_id_pkey PRIMARY KEY (slot_id);

ALTER TABLE ONLY findr.dlr_space
    ADD CONSTRAINT space_id_pkey PRIMARY KEY (space_id);

ALTER TABLE ONLY findr.sys_dealer
    ADD CONSTRAINT sys_dealer_pkey PRIMARY KEY (dlr_id);

ALTER TABLE ONLY findr.veh_key
    ADD CONSTRAINT veh_key_pkey PRIMARY KEY (key_id);

ALTER TABLE ONLY findr.veh_loc
    ADD CONSTRAINT veh_loc_pkey PRIMARY KEY (veh_loc_id);

ALTER TABLE ONLY findr.veh_assign_key
    ADD CONSTRAINT veh_pkey PRIMARY KEY (key_assign_id);

ALTER TABLE ONLY findr.vehicle
    ADD CONSTRAINT vehicle_pkey PRIMARY KEY (veh_id);

ALTER TABLE ONLY findr.map_zone
    ADD CONSTRAINT zone_id_pkey PRIMARY KEY (zone_id);

ALTER TABLE ONLY public.gorp_migrations
    ADD CONSTRAINT gorp_migrations_pkey PRIMARY KEY (id);

CREATE INDEX "fki_V" ON findr.veh_key USING btree (veh_id);

CREATE INDEX fki_key_id ON findr.veh_key USING btree (key_id);

CREATE INDEX fki_veh_id ON findr.vehicle USING btree (veh_id);

ALTER TABLE ONLY findr.vehicle
    ADD CONSTRAINT dealer_id_fkey FOREIGN KEY (dlr_id) REFERENCES findr.sys_dealer(dlr_id);

ALTER TABLE ONLY findr.dlr_staff
    ADD CONSTRAINT dealer_id_fkey FOREIGN KEY (dlr_id) REFERENCES findr.sys_dealer(dlr_id);

ALTER TABLE ONLY findr.map
    ADD CONSTRAINT dlr_id_fkey FOREIGN KEY (dlr_id) REFERENCES findr.sys_dealer(dlr_id);

ALTER TABLE ONLY findr.dlr_loc
    ADD CONSTRAINT dlr_id_fkey FOREIGN KEY (dlr_id) REFERENCES findr.sys_dealer(dlr_id);

ALTER TABLE ONLY findr.veh_assign_key
    ADD CONSTRAINT key_id_fkey FOREIGN KEY (key_id) REFERENCES findr.veh_key(key_id);

ALTER TABLE ONLY findr.map_parking_lot
    ADD CONSTRAINT map_id_fkey FOREIGN KEY (map_id) REFERENCES findr.map(map_id);

ALTER TABLE ONLY findr.map_zone
    ADD CONSTRAINT parking_lot_id_fkey FOREIGN KEY (parking_lot_id) REFERENCES findr.map_parking_lot(parking_lot_id);

ALTER TABLE ONLY findr.dlr_staff
    ADD CONSTRAINT staff_role_name_fkey FOREIGN KEY (staff_role_name) REFERENCES findr.dlr_role(role_name);

ALTER TABLE ONLY findr.veh_assign_key
    ADD CONSTRAINT veh_id_fkey FOREIGN KEY (veh_id) REFERENCES findr.vehicle(veh_id);

ALTER TABLE ONLY findr.veh_key
    ADD CONSTRAINT veh_id_fkey FOREIGN KEY (veh_id) REFERENCES findr.vehicle(veh_id) ON DELETE CASCADE;

ALTER TABLE ONLY findr.veh_loc
    ADD CONSTRAINT veh_id_fkey FOREIGN KEY (veh_id) REFERENCES findr.vehicle(veh_id);

ALTER TABLE ONLY findr.map_slot
    ADD CONSTRAINT zone_id_fkey FOREIGN KEY (zone_id) REFERENCES findr.map_zone(zone_id);

CREATE POLICY cron_job_policy ON cron.job USING ((username = CURRENT_USER));

CREATE POLICY cron_job_run_details_policy ON cron.job_run_details USING ((username = CURRENT_USER));

ALTER TABLE cron.job ENABLE ROW LEVEL SECURITY;

ALTER TABLE cron.job_run_details ENABLE ROW LEVEL SECURITY;

